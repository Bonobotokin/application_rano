name: Build and Publish Flutter Release APK

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    name: Build Flutter Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.3'
          channel: 'stable'

      - name: Check Flutter version
        run: flutter --version

      - name: Get dependencies
        run: flutter pub get

      - name: Extract version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build APK
        run: |
          flutter build apk --release
          ls -la build/app/outputs/flutter-apk/

      - name: Rename APK
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-v$VERSION-release.apk
            echo "APK renamed to: app-v$VERSION-release.apk"
          else
            echo "Error: APK not found!"
            exit 1
          fi

      # Nouvelle étape : Créer une release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      # Nouvelle étape : Uploader l’APK dans la release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-v${{ steps.version.outputs.version }}-release.apk
          asset_name: app-v${{ steps.version.outputs.version }}-release.apk
          asset_content_type: application/vnd.android.package-archive