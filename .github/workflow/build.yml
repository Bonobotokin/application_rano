name: Build and Publish Flutter Release APK

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    name: Build Flutter Release APK
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Cloner le dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 : Configurer Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      # Étape 3 : Configurer Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.3' # Remplace par ta version de Flutter
          channel: 'stable'

      # Étape 5 : Récupérer les dépendances
      - name: Get dependencies
        run: flutter pub get

      # Étape 8 : Extraire la version depuis pubspec.yaml
      - name: Extract version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | cut -d'+' -f1)
          echo "Extracted version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Étape 9 : Construire l'APK release
      - name: Build APK
        run: flutter build apk --release

      # Étape 10 : Renommer l'APK avec la version
      - name: Rename APK
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-v$VERSION-release.apk

      # Étape 11 : Publier l'APK renommée
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-v${{ steps.version.outputs.version }}-release-apk
          path: build/app/outputs/flutter-apk/app-v${{ steps.version.outputs.version }}-release.apk