import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:compteur/blocs/auth_bloc.dart';
import 'package:compteur/shared/styles.dart';
import 'package:compteur/shared/colors.dart';

class LoginPage extends StatelessWidget {
  final TextEditingController phoneNumberController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    final AuthBloc authBloc = BlocProvider.of<AuthBloc>(context);

    return Scaffold(
      backgroundColor: Colors.white,
      body: Center(
        child: SingleChildScrollView(
          padding: EdgeInsets.symmetric(horizontal: 40.0),
          child: BlocListener<AuthBloc, AuthState>(
            listener: (context, state) {
              if (state is AuthError) {
                ScaffoldMessenger.of(context).showSnackBar(
                  SnackBar(content: Text(state.error)),
                );
              }
            },
            child: BlocBuilder<AuthBloc, AuthState>(
              builder: (context, state) {
                return Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Image.asset(
                      'images/img.png',
                      height: 100,
                      width: 800,
                    ),
                    SizedBox(height: 30.0),
                    TextFormField(
                      controller: phoneNumberController,
                      decoration: InputDecoration(
                        labelText: 'Telephone',
                        prefixIcon: Icon(Icons.phone),
                        contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 15.0), // ajustement de la marge intérieure
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10),
                        ),
                        enabledBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(5.0),
                          borderSide: BorderSide(color: Color(0xFF3B77F7), width: 1.0), // Utilisation du null-aware operator !
                        ),
                        focusedBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(5.0),
                          borderSide: BorderSide(color: Color(0xFF3B77F7), width: 1.0),
                        ),
                        floatingLabelBehavior: FloatingLabelBehavior.never, // Le labelText reste en place et disparaît lorsqu'il est sélectionné
                      ),
                    ),
                    SizedBox(height: 16.0),
                    TextFormField(
                      controller: passwordController,
                      obscureText: true,
                      decoration: InputDecoration(
                        labelText: 'Password',
                        prefixIcon: Icon(Icons.lock),
                        contentPadding: EdgeInsets.symmetric(vertical: 15.0, horizontal: 15.0),
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10),
                        ),
                        enabledBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(5.0),
                          borderSide: BorderSide(color: Color(0xFF3B77F7), width: 1.0), // Utilisation du null-aware operator !
                        ),
                        focusedBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(5.0),
                          borderSide: BorderSide(color:Color(0xFF3B77F7), width: 1.0),
                        ),
                        floatingLabelBehavior: FloatingLabelBehavior.never, // Le labelText reste en place et disparaît lorsqu'il est sélectionné
                      ),
                    ),
                    SizedBox(height: 24.0),
                    Container(
                      width: double.infinity,
                      child: ElevatedButton(
                        onPressed: () {
                          authBloc.add(
                            LoginEvent(
                              phoneNumber: phoneNumberController.text,
                              password: passwordController.text,
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          primary: Color(0xFF0ABFBA), // Définir la couleur du bouton
                          padding: EdgeInsets.symmetric(vertical: 12.0),
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(24.0),
                          ),
                        ),
                        child: state is AuthLoading
                            ? CircularProgressIndicator()
                            : Text(
                          'connexion',
                          style: TextStyle(fontSize: 16.0, color: Colors.black87), // Changer la couleur du texte en noir
                        ),
                      ),
                    ),
                  ],
                );
              },
            ),
          ),
        ),
      ),
    );
  }
}
