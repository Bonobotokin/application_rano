import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:compteur/blocs/clients/client_bloc.dart';
import 'package:compteur/blocs/clients/client_state.dart';
import 'package:compteur/models/client_model.dart';
import 'package:compteur/models/compteur_model.dart';
import 'package:compteur/models/contrat_model.dart';
import 'dart:typed_data';

class ClientInfoPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[200],
      appBar: AppBar(
        backgroundColor: Colors.grey[200],
        title: Text('Informations du client'),
      ),
      body: Center(
        child: BlocBuilder<ClientBloc, ClientState>(
          builder: (context, state) {
            if (state is ClientLoading) {
              // Afficher un indicateur de chargement si les données sont en cours de chargement
              return CircularProgressIndicator();
            } else if (state is ClientLoaded) {
              // Afficher les informations du client, du contrat et des compteurs lorsque chargées
              return _buildBox2(state.client, state.contrat, state.compteur);
            } else if (state is ClientError) {
              // Afficher un message d'erreur en cas d'échec du chargement des données
              return Center(child: Text('Erreur: ${state.message}'));
            } else {
              // Si l'état n'est pas encore défini, afficher une vue vide
              return SizedBox.shrink();
            }
          },
        ),
      ),
    );
  }

  Widget _buildBox2(ClientModel client, ContratModel contrat, List<CompteurModel> compteurs) {
    return Container(
      width: 400,
      decoration: BoxDecoration(
        color: Colors.grey[300],
      ),
      child: Padding(
        padding: const EdgeInsets.fromLTRB(20.0, 20.0, 20.0, 20.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            ListTile(
              leading: CircleAvatar(
                backgroundImage: AssetImage('assets/images/images.jpeg'),
                radius: 30,
              ),
              title: Text(
                '${client.nom} ${client.prenom}',
                style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
              ),
              subtitle: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  SizedBox(height: 5),
                  Text(client.adresse, style: TextStyle(color: Colors.grey[600])),
                  SizedBox(height: 2),
                  Text('${client.commune}, ${client.region}', style: TextStyle(color: Colors.grey[600])),
                  SizedBox(height: 2),
                  Text('Tél: ${client.telephone_1} - ${client.telephone_2}', style: TextStyle(color: Colors.grey[600])),
                ],
              ),
            ),
            SizedBox(height: 20),
            Text(
              'Compteurs',
              style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
            ),
            SizedBox(height: 10),
            ListTile(
              title: Text('Numero: ${compteur.id}'),
              subtitle: Text('Marque: ${compteur.marque}, Modele: ${compteur.modele}'),
            ),
            Expanded(
              child: SingleChildScrollView(
                child: Column(
                  children: compteurs.map((compteur) {
                    return Card(
                      elevation: 4,
                      margin: EdgeInsets.symmetric(vertical: 5),
                      child: ListTile(
                        title: Text('Numero: ${compteur.id}'),
                        subtitle: Text('Marque: ${compteur.marque}, Modele: ${compteur.modele}'),
                      ),
                    );
                  }).toList(),
                ),
              ),
            ),
            SizedBox(height: 20),
            Card(
              elevation: 4,
              child: Padding(
                padding: const EdgeInsets.all(20.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      'Contrat',
                      style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                    ),
                    SizedBox(height: 10),
                    Text('Numero : ${contrat.numeroContrat}', style: TextStyle(color: Colors.grey[600])),
                    Text('Debut : ${contrat.dateDebut}', style: TextStyle(color: Colors.grey[600])),
                    Text('DFn : ${contrat.dateFin}', style: TextStyle(color: Colors.grey[600])),
                    Text('Adresse : ${contrat.adresseContrat}', style: TextStyle(color: Colors.grey[600])),
                    Text('Pays : ${contrat.paysContrat}', style: TextStyle(color: Colors.grey[600])),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }


}
